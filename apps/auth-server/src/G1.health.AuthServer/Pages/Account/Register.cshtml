@page
@using Microsoft.AspNetCore.Mvc.Localization
@using Volo.Abp.Account.Localization
@using Volo.Abp.Account.Public.Web.Security.Recaptcha
@using Volo.Abp.Account.Settings
@using Volo.Abp.Settings
@model G1.health.AuthServer.Pages.Account.RegisterModel
@using Volo.Forms;
@using G1.health.Shared.Utilities.Common
@inject IHtmlLocalizer<AccountResource> L
@inject Volo.Abp.AspNetCore.Mvc.UI.Layout.IPageLayout PageLayout
@inject ISettingProvider SettingProvider
@{
    await Model.SetLocalizationTexts();
    PageLayout.Content.Title = Model.RegisterText;
    var reCaptchaVersion = await SettingProvider.GetAsync<int>(AccountSettingNames.Captcha.Version);
}

@if (!Model.LocalLoginDisabled)
{
    @section scripts
    {
    <abp-script-bundle name="@typeof(G1.health.AuthServer.Pages.Account.RegisterModel).FullName">
        <abp-script src="/Pages/Account/Register.js" />
    </abp-script-bundle>

    <script>
        $(function () {
            var disclaimerModel = new abp.ModalManager({
                viewUrl: '/Account/DisclaimerModal'
            });

            $('.OpenDisclaimerModel').click(function () {
                disclaimerModel.open();
            });
        });

        document.addEventListener('DOMContentLoaded', (event) => {
            const checkbox = document.querySelector('input[type="checkbox"][name="Input.TermsAndConditions"]');
            const hiddenInput = document.querySelector('input[type="hidden"][name="Input.TermsAndConditions"]');

            checkbox.addEventListener('change', function () {
                if (this.checked) {
                    hiddenInput.disabled = true;
                } else {
                    hiddenInput.disabled = false;
                }
            });

            if (checkbox.checked) {
                hiddenInput.disabled = true;
            }
        });
    </script>

    @if (Model.UseCaptcha)
        {
            if (reCaptchaVersion == 3)
            {
                <recaptcha-script-v3 />
                <recaptcha-script-v3-js action="register" callback="(function(){$('#@RecaptchaValidatorBase.RecaptchaResponseKey').val(token)})" />
            }
            else
            {
                <recaptcha-script-v2 />
            }
        }
    }

    <style>
       
        .form-field{
            font-family: "Roboto";
            font-size: 14px;
            font-weight: 500;
            line-height: 20px;
            letter-spacing: 0.10000000149011612px;
            text-align: left;
            color: #1B1C17

        }
        .hidden-scroll{
            padding-right:15px;            
            overflow: auto;
        }
        .form-floating > .form-control, .form-floating > .form-control-plaintext {
            padding: 0.8rem 0.65rem;
        }
        .form-floating > .form-control, .form-floating > .form-control-plaintext, .form-floating > .form-select {
            height: calc(2.3rem + 2px);
            line-height: 1.25;
        }
        .form-floating > label {
            padding: 0.2rem 0.5rem !important;
            margin-top:2px !important;
        }
        .mb-2{
            margin-bottom:0.5rem !important
        }

        .mb-3 {
            margin-bottom: 0.5rem !important
        }
        .form-control{
        background: #FFFFFF;
        @* padding:1.5em 0 0 0.5rem !important; *@
        border: 1px solid #C6C8B8;
        height:40px
        }
        hr{
        margin: 0.01rem 0;
        color: inherit;
        border: 0;
        border-top: 1px solid;
        opacity: 0.25;
        }
        .OpenDisclaimerModel{
            font-family: "Roboto";
            font-size: 14px;
            font-weight: 400;
            line-height: 20px;
            letter-spacing: 0.25px;
            text-align: left;

        }
        .form-select {
        height: 45px;
        display: block;
        width: 100%;
        padding: 0.675rem 3.75rem 0.675rem 1.25rem;
        -moz-padding-start: calc(1.25rem - 3px);
        font-size: 0.875rem!important;
        font-weight: 500 !important;
        line-height: 1.5 !important;
        color: #686b6e !important;
        background-color: #FFFFFF !important;
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23343a40' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m2 5 6 6 6-6'/%3e%3c/svg%3e") !important;
        background-repeat: no-repeat !important;
        background-position: right 1.25rem center !important;
        background-size: 16px 12px !important;
        border: 1px solid #C6C8B8 !important;
        border-radius: 0.5rem !important;
        box-shadow: none !important;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out !important;
        appearance: none!important;
        }
        option{
            font-family: Roboto;
            font-size: 14px;
            font-weight: 400;
            line-height: 20px;
            letter-spacing: 0.25px;
            text-align: left;
            color: #1B1C17;
        }
    </style>

    <div class="account-module-form hidden-scroll">
@*        <h5 class="mb-2">@L["AlreadyRegistered"] <a class="text-decoration-none" href="@Url.Page("./Login", new {returnUrl = Model.ReturnUrl, returnUrlHash = Model.ReturnUrlHash})">@L["Login"]</a></h5>
*@        <form method="post">


            @if (Model.UseCaptcha)
            {
                <div class="mb-2">
                    <input type="hidden" name="@RecaptchaValidatorBase.RecaptchaResponseKey" id="@RecaptchaValidatorBase.RecaptchaResponseKey" />
                </div>
            }

            <div class="row row-cols-2">

                <div class="col">

                    @for (int i = 0; i < Model.Fields.Count; i++)
                    {
                        @if (Model.Fields[i].Title == RegistrationConsts.Email && @i % 2 == 0)
                        {
                            <div class="mb-2">
                                <label class="form-field" for=" field-@Model.Fields[i].Index">@Model.Fields[i].Description @if(Model.Fields[i].IsRequired) {<span>*</span>}</label>
                                <input tabindex="@Model.Fields[i].Index" asp-for="Input.EmailAddress" type="email" class="form-control"  auto-focus="true">
                               @*  @Html.LabelFor(m => m.Input.EmailAddress) *@

                                <input type="hidden" asp-for="@Model.Fields[i].Index" />
                                <input type="hidden" asp-for="@Model.Fields[i].Title" />
                                <input type="hidden" asp-for="@Model.Fields[i].Description" />
                                <input type="hidden" asp-for="@Model.Fields[i].IsRequired" />
                                <input type="hidden" asp-for="@Model.Fields[i].QuestionType" />
                                <input type="hidden" asp-for="@Model.Fields[i].Answer" value="example@email" required="@Model.Fields[i].IsRequired"  class="form-control" auto-focus="true">
                            </div>
                        }
                        else
                        {
                            @if (@i % 2 == 0)
                            {
                                switch (Model.Fields[i].QuestionType)
                                {
                                    case QuestionTypes.ShortText:
                                        <div class="mb-2 " >
                                            <label class="form-field" for=" field-@Model.Fields[i].Index">@Model.Fields[i].Description @if(Model.Fields[i].IsRequired) {<span>*</span>}</label>
                                            <input type="hidden" asp-for="@Model.Fields[i].Index" />
                                            <input type="hidden" asp-for="@Model.Fields[i].Title" />
                                            <input type="hidden" asp-for="@Model.Fields[i].Description" />
                                            <input type="hidden" asp-for="@Model.Fields[i].IsRequired" />
                                            <input type="hidden" asp-for="@Model.Fields[i].QuestionType" />
                                            <input tabindex="@Model.Fields[i].Index" asp-for="@Model.Fields[i].Answer" required="@Model.Fields[i].IsRequired" type="text"  class="form-control" auto-focus="true">
                                            @* @Html.Label(Model.Fields[i].Description) *@
                                        </div>
                                        break;

                                    case QuestionTypes.ParagraphText:
                                        <div class="mb-2">
                                            <label class="form-field" for=" field-@Model.Fields[i].Index">@Model.Fields[i].Description @if(Model.Fields[i].IsRequired) {<span>*</span>}</label>
                                            <input type="hidden" asp-for="@Model.Fields[i].Index" />
                                            <input type="hidden" asp-for="@Model.Fields[i].Title" />
                                            <input type="hidden" asp-for="@Model.Fields[i].Description" />
                                            <input type="hidden" asp-for="@Model.Fields[i].IsRequired" />
                                            <input type="hidden" asp-for="@Model.Fields[i].QuestionType" />
                                            <input tabindex="@Model.Fields[i].Index" asp-for="@Model.Fields[i].Answer" required="@Model.Fields[i].IsRequired" type="text"  class="form-control" auto-focus="true">
                                            @* @Html.Label(Model.Fields[i].Description) *@
                                        </div>
                                        break;

                                    case QuestionTypes.ChoiceMultiple:
                                        <div class="mb-2">
                                            <label class="form-field" for=" field-@Model.Fields[i].Index">@Model.Fields[i].Description @if(Model.Fields[i].IsRequired) {<span>*</span>}</label>
                                            <input type="hidden" asp-for="@Model.Fields[i].Index" />
                                            <input type="hidden" asp-for="@Model.Fields[i].Title" />
                                            <input type="hidden" asp-for="@Model.Fields[i].Description" />
                                            <input type="hidden" asp-for="@Model.Fields[i].IsRequired" />
                                            <input type="hidden" asp-for="@Model.Fields[i].HasOtherOption" />
                                            <input type="hidden" asp-for="@Model.Fields[i].QuestionType" />
                                            <lable>@Model.Fields[i].Description</lable>
                                            <abp-radio tabindex="@Model.Fields[i].Index" asp-for="@Model.Fields[i].Answer" required="@Model.Fields[i].IsRequired" asp-items="@Model.Fields[i].Choices" />
                                        </div>
                                        break;

                                    case QuestionTypes.Checkbox:
                                        @if (@Model.Fields[i].Title != RegistrationConsts.TermsAndConditions)
                                        {
                                            <div class="mb-2">

                                                <input type="hidden" asp-for="@Model.Fields[i].Index" />
                                                <input type="hidden" asp-for="@Model.Fields[i].Title" />
                                                <input type="hidden" asp-for="@Model.Fields[i].Description" />
                                                <input type="hidden" asp-for="@Model.Fields[i].IsRequired" />
                                                <input type="hidden" asp-for="@Model.Fields[i].HasOtherOption" />
                                                <input type="hidden" asp-for="@Model.Fields[i].QuestionType" />
                                                @foreach (var choice in Model.Fields[i].Choices)
                                                {
                                                    <abp-input tabindex="@Model.Fields[i].Index" asp-for="@Model.Fields[i].Answer" required="@Model.Fields[i].IsRequired" label="@choice.Value" type="checkbox" />
                                                }
                                            </div>
                                        }
                                        break;

                                    case QuestionTypes.DropdownList:
                                        <div class="mb-2">

                                            @if (@Model.Fields[i].Title == RegistrationConsts.CountryCode)
                                            {
                                                <div style="display: none">
                                                    <label class="form-field" for=" field-@Model.Fields[i].Index">@Model.Fields[i].Description @if(Model.Fields[i].IsRequired) {<span>*</span>}</label>
                                                    <input type="hidden" asp-for="@Model.Fields[i].Index" />
                                                    <input type="hidden" asp-for="@Model.Fields[i].Title" />
                                                    <input type="hidden" asp-for="@Model.Fields[i].Description" />
                                                    <input type="hidden" asp-for="@Model.Fields[i].IsRequired" />
                                                    <input type="hidden" asp-for="@Model.Fields[i].HasOtherOption" />
                                                    <input type="hidden" asp-for="@Model.Fields[i].QuestionType" />
                                                    <abp-select hidden asp-for="@Model.Fields[i].Answer" required="@Model.Fields[i].IsRequired" label="@Model.Fields[i].Description" asp-items="@Model.Fields[i].Choices" />
                                                </div>
                                            }
                                            else
                                            {
                                                <label class="form-field" for=" field-@Model.Fields[i].Index">@Model.Fields[i].Description @if(Model.Fields[i].IsRequired) {<span>*</span>}</label>
                                                <input type="hidden" asp-for="@Model.Fields[i].Index" />
                                                <input type="hidden" asp-for="@Model.Fields[i].Title" />
                                                <input type="hidden" asp-for="@Model.Fields[i].Description" />
                                                <input type="hidden" asp-for="@Model.Fields[i].IsRequired" />
                                                <input type="hidden" asp-for="@Model.Fields[i].HasOtherOption" />
                                                <input type="hidden" asp-for="@Model.Fields[i].QuestionType" />
                                                <abp-select suppress-label="true" tabindex="@Model.Fields[i].Index" asp-for="@Model.Fields[i].Answer" required="@Model.Fields[i].IsRequired" label="@Model.Fields[i].Description" asp-items="@Model.Fields[i].Choices" />
                                                @* @Html.Label(Model.Fields[i].Description) *@
                                            }
                                        </div>
                                        break;

                                    case QuestionTypes.MultipleSelect:
                                        <div class="mb-2">
                                            <label class="form-field" for=" field-@Model.Fields[i].Index">@Model.Fields[i].Description @if(Model.Fields[i].IsRequired) {<span>*</span>}</label>
                                            <input type="hidden" asp-for="@Model.Fields[i].Index" />
                                            <input type="hidden" asp-for="@Model.Fields[i].Title" />
                                            <input type="hidden" asp-for="@Model.Fields[i].Description" />
                                            <input type="hidden" asp-for="@Model.Fields[i].IsRequired" />
                                            <input type="hidden" asp-for="@Model.Fields[i].HasOtherOption" />
                                            <input type="hidden" asp-for="@Model.Fields[i].QuestionType" />
                                            <abp-select tabindex="@Model.Fields[i].Index" asp-for="@Model.Fields[i].Answers" required="@Model.Fields[i].IsRequired" label="@Model.Fields[i].Description" asp-items="@Model.Fields[i].Choices" />
                                        </div>
                                        break;

                                    case QuestionTypes.Calendar:
                                        <div class="mb-2">
                                            <label class="form-field" for=" field-@Model.Fields[i].Index">@Model.Fields[i].Description @if(Model.Fields[i].IsRequired) {<span>*</span>}</label>
                                            <input type="hidden" asp-for="@Model.Fields[i].Index" />
                                            <input type="hidden" asp-for="@Model.Fields[i].Title" />
                                            <input type="hidden" asp-for="@Model.Fields[i].Description" />
                                            <input type="hidden" asp-for="@Model.Fields[i].IsRequired" />
                                            <input type="hidden" asp-for="@Model.Fields[i].QuestionType" />
                                            <input tabindex="@Model.Fields[i].Index" asp-for="@Model.Fields[i].Answer" required="@Model.Fields[i].IsRequired" type="datetime-local"  class="form-control" auto-focus="true" />
                                            @* @Html.Label(Model.Fields[i].Description) *@
                                        </div>
                                        break;

                                    case QuestionTypes.Date:
                                        <div class="mb-2">
                                            <label class="form-field" for=" field-@Model.Fields[i].Index">@Model.Fields[i].Description @if(Model.Fields[i].IsRequired) {<span>*</span>}</label>
                                            <input type="hidden" asp-for="@Model.Fields[i].Index" />
                                            <input type="hidden" asp-for="@Model.Fields[i].Title" />
                                            <input type="hidden" asp-for="@Model.Fields[i].Description" />
                                            <input type="hidden" asp-for="@Model.Fields[i].IsRequired" />
                                            <input type="hidden" asp-for="@Model.Fields[i].QuestionType" />
                                            <input tabindex="@Model.Fields[i].Index" asp-for="@Model.Fields[i].Answer" required="@Model.Fields[i].IsRequired" type="date"  class="form-control" />
                                            @* @Html.Label(Model.Fields[i].Description) *@
                                        </div>
                                        break;

                                    case QuestionTypes.Time:
                                        <div class="mb-2">
                                            <label class="form-field" for=" field-@Model.Fields[i].Index">@Model.Fields[i].Description @if(Model.Fields[i].IsRequired) {<span>*</span>}</label>
                                            <input type="hidden" asp-for="@Model.Fields[i].Index" />
                                            <input type="hidden" asp-for="@Model.Fields[i].Title" />
                                            <input type="hidden" asp-for="@Model.Fields[i].Description" />
                                            <input type="hidden" asp-for="@Model.Fields[i].IsRequired" />
                                            <input type="hidden" asp-for="@Model.Fields[i].QuestionType" />
                                            <input tabindex="@Model.Fields[i].Index" asp-for="@Model.Fields[i].Answer" required="@Model.Fields[i].IsRequired" type="time"  class="form-control" auto-focus="true">
                                            @* @Html.Label(Model.Fields[i].Description) *@
                                        </div>
                                        break;
                                }
                            }
                        }
                    }
                </div>

                <div class="col">
                    @for (int i = 0; i < Model.Fields.Count; i++)
                    {
                        @if (Model.Fields[i].Title == RegistrationConsts.Email && @i % 2 != 0)
                        {
                            <div class="mb-2">
                                <label class="form-field" for=" field-@Model.Fields[i].Index">@Model.Fields[i].Description @if(Model.Fields[i].IsRequired) {<span>*</span>}</label>
                                <input tabindex="@Model.Fields[i].Index" asp-for="Input.EmailAddress" type="email" class="form-control" auto-focus="true">
                                @* @Html.LabelFor(m => m.Input.EmailAddress) *@

                                <input type="hidden" asp-for="@Model.Fields[i].Index" />
                                <input type="hidden" asp-for="@Model.Fields[i].Title" />
                                <input type="hidden" asp-for="@Model.Fields[i].Description" />
                                <input type="hidden" asp-for="@Model.Fields[i].IsRequired" />
                                <input type="hidden" asp-for="@Model.Fields[i].QuestionType" />
                                <input type="hidden" asp-for="@Model.Fields[i].Answer" value="example@email" required="@Model.Fields[i].IsRequired"  class="form-control" auto-focus="true">
                            </div>
                        }
                        else
                        {
                            @if (@i % 2 != 0)
                            {
                                switch (Model.Fields[i].QuestionType)
                                {
                                    case QuestionTypes.ShortText:
                                        <div class="mb-2">
                                            <label class="form-field" for=" field-@Model.Fields[i].Index">@Model.Fields[i].Description @if(Model.Fields[i].IsRequired) {<span>*</span>}</label>
                                            <input type="hidden" asp-for="@Model.Fields[i].Index" />
                                            <input type="hidden" asp-for="@Model.Fields[i].Title" />
                                            <input type="hidden" asp-for="@Model.Fields[i].Description" />
                                            <input type="hidden" asp-for="@Model.Fields[i].IsRequired" />
                                            <input type="hidden" asp-for="@Model.Fields[i].QuestionType" />
                                            <input tabindex="@Model.Fields[i].Index" asp-for="@Model.Fields[i].Answer" required="@Model.Fields[i].IsRequired" type="text"  class="form-control" auto-focus="true">
                                            @* @Html.Label(Model.Fields[i].Description) *@
                                        </div>
                                        break;

                                    case QuestionTypes.ParagraphText:
                                        <div class="mb-2">
                                            <label class="form-field" for=" field-@Model.Fields[i].Index">@Model.Fields[i].Description @if(Model.Fields[i].IsRequired) {<span>*</span>}</label>
                                            <input type="hidden" asp-for="@Model.Fields[i].Index" />
                                            <input type="hidden" asp-for="@Model.Fields[i].Title" />
                                            <input type="hidden" asp-for="@Model.Fields[i].Description" />
                                            <input type="hidden" asp-for="@Model.Fields[i].IsRequired" />
                                            <input type="hidden" asp-for="@Model.Fields[i].QuestionType" />
                                            <input tabindex="@Model.Fields[i].Index" asp-for="@Model.Fields[i].Answer" required="@Model.Fields[i].IsRequired" type="text"  class="form-control" auto-focus="true">
                                            @* @Html.Label(Model.Fields[i].Description) *@
                                        </div>
                                        break;

                                    case QuestionTypes.ChoiceMultiple:
                                        <div class="mb-2">
                                            <input type="hidden" asp-for="@Model.Fields[i].Index" />
                                            <input type="hidden" asp-for="@Model.Fields[i].Title" />
                                            <input type="hidden" asp-for="@Model.Fields[i].Description" />
                                            <input type="hidden" asp-for="@Model.Fields[i].IsRequired" />
                                            <input type="hidden" asp-for="@Model.Fields[i].HasOtherOption" />
                                            <input type="hidden" asp-for="@Model.Fields[i].QuestionType" />
                                            <lable>@Model.Fields[i].Description</lable>
                                            <abp-radio tabindex="@Model.Fields[i].Index" asp-for="@Model.Fields[i].Answer" required="@Model.Fields[i].IsRequired" asp-items="@Model.Fields[i].Choices" />
                                        </div>
                                        break;

                                    case QuestionTypes.Checkbox:
                                        @if (@Model.Fields[i].Title != RegistrationConsts.TermsAndConditions)
                                        {
                                            <div class="mb-2">
                                                <input type="hidden" asp-for="@Model.Fields[i].Index" />
                                                <input type="hidden" asp-for="@Model.Fields[i].Title" />
                                                <input type="hidden" asp-for="@Model.Fields[i].Description" />
                                                <input type="hidden" asp-for="@Model.Fields[i].IsRequired" />
                                                <input type="hidden" asp-for="@Model.Fields[i].HasOtherOption" />
                                                <input type="hidden" asp-for="@Model.Fields[i].QuestionType" />
                                                @foreach (var choice in Model.Fields[i].Choices)
                                                {
                                                    <abp-input tabindex="@Model.Fields[i].Index" asp-for="@Model.Fields[i].Answer" required="@Model.Fields[i].IsRequired" label="@choice.Value" type="checkbox" />
                                                }
                                            </div>
                                        }
                                        break;

                                    case QuestionTypes.DropdownList:
                                        <div class="mb-2">

                                            @if (@Model.Fields[i].Title == RegistrationConsts.CountryCode)
                                            {
                                                <div style="display: none">
                                                    <input type="hidden" asp-for="@Model.Fields[i].Index" />
                                                    <input type="hidden" asp-for="@Model.Fields[i].Title" />
                                                    <input type="hidden" asp-for="@Model.Fields[i].Description" />
                                                    <input type="hidden" asp-for="@Model.Fields[i].IsRequired" />
                                                    <input type="hidden" asp-for="@Model.Fields[i].HasOtherOption" />
                                                    <input type="hidden" asp-for="@Model.Fields[i].QuestionType" />
                                                    <abp-select hidden asp-for="@Model.Fields[i].Answer" required="@Model.Fields[i].IsRequired" label="@Model.Fields[i].Description" asp-items="@Model.Fields[i].Choices" />
                                                </div>
                                            }
                                            else
                                            {
                                                <label class="form-field" for=" field-@Model.Fields[i].Index">@Model.Fields[i].Description @if(Model.Fields[i].IsRequired) {<span>*</span>}</label>
                                                <input type="hidden" asp-for="@Model.Fields[i].Index" />
                                                <input type="hidden" asp-for="@Model.Fields[i].Title" />
                                                <input type="hidden" asp-for="@Model.Fields[i].Description" />
                                                <input type="hidden" asp-for="@Model.Fields[i].IsRequired" />
                                                <input type="hidden" asp-for="@Model.Fields[i].HasOtherOption" />
                                                <input type="hidden" asp-for="@Model.Fields[i].QuestionType" />
                                                <abp-select suppress-label="true" tabindex="@Model.Fields[i].Index" asp-for="@Model.Fields[i].Answer" required="@Model.Fields[i].IsRequired" label="@Model.Fields[i].Description" asp-items="@Model.Fields[i].Choices" />
                                                @* @Html.Label(Model.Fields[i].Description) *@
                                            }
                                        </div>
                                        break;

                                    case QuestionTypes.MultipleSelect:
                                        <div class="mb-2">
                                            <input type="hidden" asp-for="@Model.Fields[i].Index" />
                                            <input type="hidden" asp-for="@Model.Fields[i].Title" />
                                            <input type="hidden" asp-for="@Model.Fields[i].Description" />
                                            <input type="hidden" asp-for="@Model.Fields[i].IsRequired" />
                                            <input type="hidden" asp-for="@Model.Fields[i].HasOtherOption" />
                                            <input type="hidden" asp-for="@Model.Fields[i].QuestionType" />
                                            <abp-select tabindex="@Model.Fields[i].Index" asp-for="@Model.Fields[i].Answers" required="@Model.Fields[i].IsRequired" label="@Model.Fields[i].Description" asp-items="@Model.Fields[i].Choices" />
                                        </div>
                                        break;

                                    case QuestionTypes.Calendar:
                                        <div class="mb-2">
                                            <label class="form-field" for=" field-@Model.Fields[i].Index">@Model.Fields[i].Description @if(Model.Fields[i].IsRequired) {<span>*</span>}</label>
                                            <input type="hidden" asp-for="@Model.Fields[i].Index" />
                                            <input type="hidden" asp-for="@Model.Fields[i].Title" />
                                            <input type="hidden" asp-for="@Model.Fields[i].Description" />
                                            <input type="hidden" asp-for="@Model.Fields[i].IsRequired" />
                                            <input type="hidden" asp-for="@Model.Fields[i].QuestionType" />
                                            <input tabindex="@Model.Fields[i].Index" asp-for="@Model.Fields[i].Answer" required="@Model.Fields[i].IsRequired" type="datetime-local"  class="form-control" auto-focus="true" />
                                            @* @Html.Label(Model.Fields[i].Description) *@
                                        </div>
                                        break;

                                    case QuestionTypes.Date:
                                        <div class="mb-2">
                                            <label class="form-field" for=" field-@Model.Fields[i].Index">@Model.Fields[i].Description @if(Model.Fields[i].IsRequired) {<span>*</span>}</label>
                                            <input type="hidden" asp-for="@Model.Fields[i].Index" />
                                            <input type="hidden" asp-for="@Model.Fields[i].Title" />
                                            <input type="hidden" asp-for="@Model.Fields[i].Description" />
                                            <input type="hidden" asp-for="@Model.Fields[i].IsRequired" />
                                            <input type="hidden" asp-for="@Model.Fields[i].QuestionType" />
                                            <input tabindex="@Model.Fields[i].Index" asp-for="@Model.Fields[i].Answer" required="@Model.Fields[i].IsRequired" type="date"  class="form-control" />
                                            @* @Html.Label(Model.Fields[i].Description) *@
                                        </div>
                                        break;

                                    case QuestionTypes.Time:
                                        <div class="mb-2">
                                            <label class="form-field" for=" field-@Model.Fields[i].Index">@Model.Fields[i].Description @if(Model.Fields[i].IsRequired) {<span>*</span>}</label>
                                            <input type="hidden" asp-for="@Model.Fields[i].Index" />
                                            <input type="hidden" asp-for="@Model.Fields[i].Title" />
                                            <input type="hidden" asp-for="@Model.Fields[i].Description" />
                                            <input type="hidden" asp-for="@Model.Fields[i].IsRequired" />
                                            <input type="hidden" asp-for="@Model.Fields[i].QuestionType" />
                                            <input tabindex="@Model.Fields[i].Index" asp-for="@Model.Fields[i].Answer" required="@Model.Fields[i].IsRequired" type="time"  class="form-control" auto-focus="true">
                                            @* @Html.Label(Model.Fields[i].Description) *@
                                        </div>
                                        break;
                                }
                            }
                        }
                    }
                </div>
            </div>

            @if (reCaptchaVersion == 2)
            {
                <recaptcha-div-v2 callback="(function(){$('#@RecaptchaValidatorBase.RecaptchaResponseKey').val(token)})" />
            }

            <div class="form-floating mb-2 mt-2">
                <div style="display: flex; justify-content: flex-start">
                    <abp-input class="OpenDisclaimerModel" asp-for="Input.TermsAndConditions" type="checkbox" suppress-label />
                    <label class="OpenDisclaimerModel" style="text-decoration: underline !important; color: #007AD0; cursor: pointer">@Model.AgreeTermsAndConditionsText</label>
                </div>
                @Html.ValidationMessageFor(model => model.Input.TermsAndConditions, "", new { @class = "text-danger" })
            </div>

            <div class="d-flex justify-content-end">
                <abp-button button-type="Primary" type="submit" class="mt-2 mb-2">@Model.RegisterText</abp-button>
            </div>
        </form>
    </div>
}
